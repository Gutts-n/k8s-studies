# this will be different from other configs because the api of the deployment is a different folder
apiVersion: apps/v1 
kind: Deployment 
metadata:
  name: hello-world-deployment
  labels:
    app: hello-world-server

spec:
  selector:
    matchLabels:
      app: hello-world-server
  replicas: 1
  # Configuration of the pod (yml created for our pods)
  template: 
    metadata:
      name: hello-world-server
      labels:
        app: hello-world-server

    spec:
      containers:
        - name: hello-world-server
          image: wesleywillians/hello-go:v9.6
          resources:
            requests: # minimum of resources to my pod works
              cpu: "0.05"
              memory: 20Mi
            limits: # limit of resources that my pod can consume independent of the load received on it
              cpu: "0.05" 
              memory: 25Mi

          startupProbe:
            httpGet:
              path: /healthz
              port: 8000 # this must be the pod port
            periodSeconds: 3 # each 3 seconds it'll send a get http request to our service
            failureThreshold: 30 # number of timeouts that it can receives until restart the pod

          readinessProbe:
            httpGet:
              path: /healthz
              port: 8000 # this must be the pod port
            periodSeconds: 3 # each 3 seconds it'll send a get http request to our service
            failureThreshold: 1 # number of timeouts that it can receives until restart the pod
            # initialDelaySeconds: 10 # wait X seconds until start to send the validations (can be used on the liveness as well)
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8000 # this must be the pod port
            periodSeconds: 5 # each 5 seconds it'll send a get http request to our service
            failureThreshold: 1 # number of timeouts that it can receives until restart the pod
            timeoutSeconds: 1 # limit of seconds to complete the request to verify if the pod is healthy,
                              # if reached out it'll send a count to the failureTreshold 
            # initialDelaySeconds: 15 # wait X seconds until start to send the validations (can be used on the liveness as well)
            successThreshold: 1 # number of verifications to ensure that the pod is healthy in a livenessProbe
          # This way we can use directly the name of the variables
          # from the config configMap file
          # honestly this is the best way to do it
          envFrom:
            # This is for configMap files
            - configMapRef:
                name: hello-world-server-env
            # This is for secret files
            - secretRef:
                name: hello-world-secret

          # env:
            # This way we can add the variables directly
            #- name: ENV_NAME
            #  value: ENV_VALUE

            #  This way we can add via configmap file
            # - name: ENV_NAME
            #   valueFrom: 
            #     configMapKeyRef:
            #       name: hello-world-server-env
            #       key: ENV_NAME
            # - name: ANOTHER_ENV_NAME
            #   valueFrom: 
            #     configMapKeyRef:
            #       name: hello-world-server-env
            #       key: ANOTHER_ENV_NAME

          volumeMounts:
            - mountPath: "/app/myfamily"
              name: config # name of the volume declared on the line 57
              readOnly: true

      # declare volumes
      volumes:
        - name: config
          configMap:
            name: configmap-family
            items:
            - key: members
              # path to the file/folder that you want to be available on the volume
              path: "family.txt"
